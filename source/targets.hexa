// The Hexa Compiler
// Copyright (C) 2018-2019  Oleg Petrenko
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

module {
	/// List of all codegen targets
	enum Generators: String {
		// primary
		JavaScript
		Native
		// third-party
		CSharp
	}

	/// Get target by name
	function availableGenerators(name: String): Generators? switch (name) {
		// primary
		case "js": return Generators.JavaScript
		case "native": return Generators.Native

		// third-party

		// none
		case _:
			return null
	}

	/// Get standard library for target
	function setLibrary(target: Generators, options: [String], files: [String], defines: Any) switch (target) {
		// primary
		case Generators.JavaScript:
			defines.js = defines.js ?? true
			files.unshift(Path.resolve(__dirname + '/library/js/js.hexa'))
			if (options.includes('nodejs')) files.unshift(Path.resolve(__dirname + '/library/nodejs/nodejs.hexa'))
			if (options.includes('browser')) files.unshift(Path.resolve(__dirname + '/library/browser/html.hexa'))

		case Generators.Native:
			defines.native = defines.native ?? true

		// third-party
	}
}
