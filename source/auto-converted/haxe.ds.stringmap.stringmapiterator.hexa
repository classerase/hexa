module haxe.ds.stringmap {
	private class StringMapIterator< haxe.ds.stringmap.T > {
		private var map: haxe.ds.stringmap.StringMap< haxe.ds.stringmap.T >
		private var keys: [String]
		private var index: Int
		private var count: Int
		@maybeUsed
		function hasNext(): Bool {
			return this.index < this.count
		}

		@maybeUsed
		function next(): haxe.ds.stringmap.T? {
			var _this: haxe.ds.stringmap.StringMap< haxe.ds.stringmap.T > = this.map
			var key: String = this.keys[this.index++]
			if (__js__('__map_reserved')[key] != null) return _this.getReserved(key) else return _this.h[(key as! Int)]
		}

		new(map: haxe.ds.stringmap.StringMap< haxe.ds.stringmap.T >, keys: [String]) {
			this.map = map
			this.keys = keys
			this.index = 0
			this.count = keys.length
		}
	}
}
