module haxe.enumtools {
	declare class EnumTools {
		static function getName(e: Enum< haxe.enumtools.T >): String {
			return Type.getEnumName(e)
		}

		static function createByName(e: Enum< haxe.enumtools.T >, constr: String, params?: [Any]?): haxe.enumtools.T {
			return Type.createEnum(e, constr, params)
		}

		static function createByIndex(e: Enum< haxe.enumtools.T >, index: Int, params?: [Any]?): haxe.enumtools.T {
			return Type.createEnumIndex(e, index, params)
		}

		static function createAll(e: Enum< haxe.enumtools.T >): [haxe.enumtools.T] {
			return __define_feature__('Type.allEnums', e.__empty_constructs__)
		}

		static function getConstructors(e: Enum< haxe.enumtools.T >): [String] {
			return ((e as! {__constructs__: [String]}).__constructs__ as! [String]).slice()
		}

	}
}
